# Credit: Workflow configs inspired from Wynntils and moto-bot

name: Release & Deploy

on:
  push:
    branches:
      - release

jobs:
  changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.changelog.outputs.tag }}
      skipped: ${{ steps.changelog.outputs.skipped }}
      clean_changelog: ${{ steps.changelog.outputs.clean_changelog }}
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Up Node
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Install Changelog Tools
        run: |
          npm install conventional-changelog-conventionalcommits@7.0.2
          npm install conventional-recommended-bump@9.0.0

      - name: Set Up version.json
        run: echo "{"version":$(git describe --tags --abbrev=0)}" > version.json

      - name: Create Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5.2.1
        with:
          github-token: ${{ secrets.PRIVATE_TOKEN }}
          git-user-name: "faz-bot-bot"
          git-user-email: "fazuhhh@proton.me"
          version-file: ./version.json
          skip-version-file: true
          skip-git-pull: true
          skip-on-empty: false
          pre-release: false
          release-count: 5

      - name: Upload Version Information
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: version.json

  build-fazcord:
    name: Build fazcord Docker Image
    needs: [changelog] # Build needs the new version number
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log In to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: FAZuH
          password: ${{ secrets.PRIVATE_TOKEN }}

      - name: Set Up Build Date
        run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Download Version Information
        uses: actions/download-artifact@v4 # Download version information from changelog
        with:
          name: version

      - name: Build and Push fazcord
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile.fazcord
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/fazuh/fazcord:latest
            ghcr.io/fazuh/fazcord:${{ needs.changelog.outputs.tag }}
          labels: |
            version=${{ needs.changelog.outputs.tag }}
            commit=${{ github.sha }}
            build_date=${{ env.date }}

  build-fazcollect:
    name: Build fazcollect Docker Image
    needs: [changelog] # Build needs the new version number
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log In to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: FAZuH
          password: ${{ secrets.PRIVATE_TOKEN }}

      - name: Set Up Build Date
        run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Download Version Information
        uses: actions/download-artifact@v4 # Download version information from changelog
        with:
          name: version

      - name: Build and Push fazcollect
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile.fazcollect
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/fazuh/fazcollect:latest
            ghcr.io/fazuh/fazcollect:${{ needs.changelog.outputs.tag }}
          labels: |
            version=${{ needs.changelog.outputs.tag }}
            commit=${{ github.sha }}
            build_date=${{ env.date }}

  release-github:
    name: Release to GitHub
    needs: [build-fazcord, build-fazcollect, changelog]
    if: ${{ needs.changelog.outputs.skipped != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download version information
        uses: actions/download-artifact@v4
        with:
          name: version

      - name: Create Release and Upload Files
        if: ${{ needs.changelog.outputs.skipped != 'true' }}
        id: release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.changelog.outputs.tag }}
          body: ${{ needs.changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Set current date
        id: date
        run: |
          echo "::set-output name=short::$(date +'%Y-%m-%d')"
          echo "::set-output name=long::$(date +'%Y-%m-%d %H:%M')"

      - name: Post Release on Discord
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_RELEASE_WEBHOOK_URL }}
          embed-color: "9498256"
          embed-title: ${{format('faz-bot {0}', needs.changelog.outputs.tag)}}
          embed-description: ${{ needs.changelog.outputs.changelog }}
          embed-url: ${{ steps.release.outputs.url }}
          embed-timestamp: ${{ steps.date.outputs.long }}

  deploy:
    name: Deploy to Server
    needs: [build-fazcord, build-fazcollect, changelog]
    runs-on: ubuntu-latest
    if: ${{ needs.changelog.outputs.skipped != 'true' }}
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Deploy
        run: ssh -o LogLevel=QUIET -t ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "/srv/faz-bot/.github/deploy.sh"
